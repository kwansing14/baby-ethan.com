import { type NextPage } from "next";
import Head from "next/head";
// eslint-disable-next-line @typescript-eslint/no-unused-vars
import { isImage, isVideo, validateSize } from "@/src/utils/fileValidation";
import { useState } from "react";
import Image from "next/image";
// import Link from "next/link";
// import { signIn, signOut, useSession } from "next-auth/react";
import { api } from "@/src/utils/api";

const Home: NextPage = () => {
  const [image, setImage] = useState<File>();
  const [imgSrc, setImgSrc] = useState("");
  const TOTAL_IMAGES = 7;
  const generateImg = api.example.uploadImg.useMutation();
  const createImage = () => {
    generateImg.mutate({ img: imgSrc });
  };

  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (!e.target.files || !e.target.files[0]) return;
    const img = e.target.files[0];
    console.log(img);
    // if no image selected
    if (!img) {
      return;
    }

    // check if image
    const result = isImage(img.name);
    if (!result) {
      const error = "File type should be a image";
      // toast(error, { type: 'error' });
      // setImageError(error);
      return;
    }
    const isImageLarge = validateSize(img);
    if (isImageLarge) {
      const error = "File must be less or equal to 5MB";
      // toast(error, { type: 'error' });
      // setImageError(error);
      return;
    }
    const reader = new FileReader();
    // converts to BASE 64
    reader.readAsDataURL(img);
    reader.addEventListener("load", () => {
      console.log("reader.resul", reader.result);
      // setImage(reader.result as string);
      setImgSrc(reader.result as string);
      setImage(img);
    });
  };
  return (
    <div className="flex flex-col items-center bg-gray-900 text-white">
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="max-w-[1960px] p-4">
        test abc
        <button
          className={"rounded-sm bg-blue-500 py-2 px-4 text-white"}
          onClick={() => createImage()}
        >
          create image
        </button>
        <input type="file" onChange={handleImageChange} className="block" />
        {image && (
          <Image
            alt="card"
            width={200}
            height={200}
            src={imgSrc}
            className="my-5 h-auto w-48 basis-1/2"
          />
        )}
      </div>
      <br />
      <div className="grid max-w-[1960px] grid-cols-1 gap-4 p-4 sm:grid-cols-2 md:grid-cols-3 xl:grid-cols-4">
        <div className="col-span-1 row-span-1 h-[400px] rounded-lg border-2 border-gray-500 sm:h-auto md:col-span-2 xl:col-span-1 xl:row-span-2">
          <div className="p4 border-grey-400 flex w-max ">Hi</div>
        </div>
        {Array.from({ length: TOTAL_IMAGES }).map((_, index) => (
          <Image
            alt="photo 1"
            className="transform rounded-lg brightness-90 transition will-change-auto group-hover:brightness-110"
            style={{ transform: "translate3d(0, 0, 0)" }}
            src={`/images/${index + 1}.jpg`}
            width={720}
            height={480}
            sizes="(max-width: 640px) 100vw,
                (max-width: 1280px) 50vw,
                (max-width: 1536px) 33vw,
                25vw"
            key={index}
          />
        ))}
      </div>
      <footer>
        <div>footer here</div>
      </footer>
    </div>
  );
};

export default Home;
